name: tests
on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
  workflow_dispatch:
    inputs:
      trigger:
        description: Type m to trigger manual jobs
        required: false
        default: ''
env:
  JAVA_VERSION: 17
  NODE_VERSION: 18.16.1
jobs:
  updates:
    if: startsWith(github.event.inputs.trigger, 'm')
      || startsWith(github.event.inputs.trigger, 'M')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: ${{ env.JAVA_VERSION }}
      - uses: actions/cache@v3
        with:
          path: |
            ~/.m2
            ~/.npm
            ~/.docker
          key: ${{ runner.os }}-build-${{ hashFiles('**/pom.xml') }}
      - run: cd $GITHUB_WORKSPACE ; mvn versions:display-property-updates
  tests:
    if: github.event.inputs.trigger == ''
      || !startsWith(github.event.inputs.trigger, 'm')
      || !startsWith(github.event.inputs.trigger, 'M')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: ${{ env.JAVA_VERSION }}
      - uses: actions/cache@v3
        with:
          path: |
            ~/.m2
            ~/.npm
            ~/.docker
          key: ${{ runner.os }}-build-${{ hashFiles('**/pom.xml') }}
      - run: cd $GITHUB_WORKSPACE ; mvn
  e2e-tests:
    name: e2e tests
    if: github.event.inputs.trigger == ''
      || !startsWith(github.event.inputs.trigger, 'm')
      || !startsWith(github.event.inputs.trigger, 'M')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: ${{ env.JAVA_VERSION }}
      - uses: actions/cache@v3
        with:
          path: |
            ~/.m2
            ~/.npm
          key: ${{ runner.os }}-build-${{ hashFiles('**/pom.xml') }}
      - run: sudo apt-get install -yqq httpie
      - uses: actions/setup-node@v1
        with:
          node-version: ${{ env.NODE_VERSION }}
      - run: cd $GITHUB_WORKSPACE ; .mvn clean compile spring-boot:start
      - run: |
          npm_config_yes=true npx wait-port 8080
          npm_config_yes=true npx wait-port 9090
          http --ignore-stdin get :8080
          http --ignore-stdin get :8080/api/user/first-name
          http --ignore-stdin get :8080/api/user/last-name
      - run: cd $GITHUB_WORKSPACE ; mvn spring-boot:stop
